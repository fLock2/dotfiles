#STARSHIP
eval "$(starship init zsh)"

alias in="brew install"
alias dup="brew update && brew upgrade"
alias rp="brew uninstall"
#alias cleancache="sudo pacman -Scc && sudo powerpill -Scc && paru -Scc"
alias cleancache="sudo dnf clean all"
alias fuck='sudo $(fc -ln -1)'
alias gcl="git clone"
alias gcm="git commit -m"
alias gpl="git pull"
alias gph="git push"
alias gad="git add"
alias grm="git remove"
alias em="emacsclient -c -a 'emacs'"
alias vim="nvim"
#alias listpkg="comm -23 <(paru -Qqett | sort) <(paru -Qqg base -g base-devel | sort | uniq)"
alias listpkg="brew list"
alias ls="exa -la"
alias doom="~/.config/emacs/bin/doom"
alias extract="unpack"


# Aliases for archives
alias mktar='tar -cvf'
alias mkbz2='tar -cvjf'
alias mkgz='tar -cvzf'
alias untar='tar -xvf'
alias unbz2='tar -xvjf'
alias ungz='tar -xvzf'

# Count all files (recursively) in the current folder
alias countfiles="for t in files links directories; do echo \`find . -type \${t:0:1} | wc -l\` \$t; done 2> /dev/null"

	# Extracts any archive(s) (if unp isn't installed)
#extract () {
#	for archive in $*; do
#		if [ -f $archive ] ; then
#			case $archive in
#				*.tar.bz2)   tar xvjf $archive    ;;
#				*.tar.gz)    tar xvzf $archive    ;;
#				*.bz2)       bunzip2 $archive     ;;
#				*.rar)       rar x $archive       ;;
#				*.gz)        gunzip $archive      ;;
#				*.tar)       tar xvf $archive     ;;
#				*.tbz2)      tar xvjf $archive    ;;
#				*.tgz)       tar xvzf $archive    ;;
#				*.zip)       unzip $archive       ;;
#				*.Z)         uncompress $archive  ;;
#				*.7z)        7z x $archive        ;;
#				*)           echo "don't know how to extract '$archive'..." ;;
#			esac
#		else
#			echo "'$archive' is not a valid file!"
#		fi
#	done
#}

# Created by `pipx` on 2021-11-18 15:50:03
export PATH="$PATH:/home/flock/.local/bin"

[ -f "/home/flock/.ghcup/env" ] && source "/home/flock/.ghcup/env" # ghcup-env

if [ -e /home/flock/.nix-profile/etc/profile.d/nix.sh ]; then . /home/flock/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
